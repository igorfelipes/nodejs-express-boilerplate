{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"Pick_User.Exclude_keyofUser.password__": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"email"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_User.password_": {
				"$ref": "#/components/schemas/Pick_User.Exclude_keyofUser.password__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"UserResponse": {
				"$ref": "#/components/schemas/Omit_User.password_"
			},
			"SessionResponse": {
				"properties": {
					"user": {
						"$ref": "#/components/schemas/UserResponse"
					},
					"token": {
						"type": "string"
					}
				},
				"required": [
					"user",
					"token"
				],
				"type": "object"
			},
			"SessionCreate": {
				"properties": {
					"password": {
						"type": "string"
					},
					"email": {
						"type": "string"
					}
				},
				"required": [
					"password",
					"email"
				],
				"type": "object"
			},
			"Pick_User.Exclude_keyofUser.id__": {
				"properties": {
					"password": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"email"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_User.id_": {
				"$ref": "#/components/schemas/Pick_User.Exclude_keyofUser.id__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"UserCreate": {
				"$ref": "#/components/schemas/Omit_User.id_"
			},
			"Partial_UserCreate_": {
				"properties": {
					"password": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Boolean": {
				"properties": {},
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {
			"bearerAuth": {
				"type": "http",
				"name": "authorization",
				"in": "headers",
				"scheme": "bearer",
				"bearerFormat": "JWT"
			}
		}
	},
	"info": {
		"title": "clean-arch-nodejs-express-boilerplate",
		"version": "0.1.0",
		"license": {
			"name": "MIT"
		},
		"contact": {
			"name": "Igor Sales",
			"email": "igorsales.fs@gmail.com"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/sessions": {
			"post": {
				"operationId": "Create",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SessionResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Session"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SessionCreate"
							}
						}
					}
				}
			}
		},
		"/users": {
			"get": {
				"operationId": "Search",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/UserResponse"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": []
			},
			"post": {
				"operationId": "Create",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponse"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserCreate"
							}
						}
					}
				}
			}
		},
		"/users/{id}": {
			"get": {
				"operationId": "ShowOne",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponse"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "Update",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponse"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_UserCreate_"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Remove",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Boolean"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}